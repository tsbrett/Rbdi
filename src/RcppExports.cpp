// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_choose
double c_choose(double N, double K);
RcppExport SEXP _Rbdi_c_choose(SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(c_choose(N, K));
    return rcpp_result_gen;
END_RCPP
}
// P_BDC
double P_BDC(double x, double x0, double lambda, double mu, double t, double eps);
RcppExport SEXP _Rbdi_P_BDC(SEXP xSEXP, SEXP x0SEXP, SEXP lambdaSEXP, SEXP muSEXP, SEXP tSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(P_BDC(x, x0, lambda, mu, t, eps));
    return rcpp_result_gen;
END_RCPP
}
// P_BDIC
double P_BDIC(double x, double x0, double v, double lambda, double mu, double t, double eps);
RcppExport SEXP _Rbdi_P_BDIC(SEXP xSEXP, SEXP x0SEXP, SEXP vSEXP, SEXP lambdaSEXP, SEXP muSEXP, SEXP tSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(P_BDIC(x, x0, v, lambda, mu, t, eps));
    return rcpp_result_gen;
END_RCPP
}
// C_bdi_ll_linear_R0
double C_bdi_ll_linear_R0(NumericVector x, double delta_t, double eta, double gamm, double dR0, double R00, double eps);
RcppExport SEXP _Rbdi_C_bdi_ll_linear_R0(SEXP xSEXP, SEXP delta_tSEXP, SEXP etaSEXP, SEXP gammSEXP, SEXP dR0SEXP, SEXP R00SEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type delta_t(delta_tSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type gamm(gammSEXP);
    Rcpp::traits::input_parameter< double >::type dR0(dR0SEXP);
    Rcpp::traits::input_parameter< double >::type R00(R00SEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(C_bdi_ll_linear_R0(x, delta_t, eta, gamm, dR0, R00, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rbdi_c_choose", (DL_FUNC) &_Rbdi_c_choose, 2},
    {"_Rbdi_P_BDC", (DL_FUNC) &_Rbdi_P_BDC, 6},
    {"_Rbdi_P_BDIC", (DL_FUNC) &_Rbdi_P_BDIC, 7},
    {"_Rbdi_C_bdi_ll_linear_R0", (DL_FUNC) &_Rbdi_C_bdi_ll_linear_R0, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rbdi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
